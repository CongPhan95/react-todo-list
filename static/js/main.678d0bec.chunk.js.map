{"version":3,"sources":["store/actions.js","store/reducer.js","components/TodoPage/TodoPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["updateTodo","todoId","content","type","payload","initialState","todos","JSON","parse","localStorage","getItem","editIndex","reducer","state","action","newTodos","push","setItem","stringify","splice","index1","findIndex","todo","id","status","checked","tempTodos","map","e","newTodos2","newTodos3","filter","newTodo3","TodoPage","useReducer","dispatch","useState","showing","setShowing","showTodos","className","placeholder","onKeyUp","key","target","value","created_date","Date","toISOString","shortid","user_id","onChange","every","htmlFor","index","updateTodoStatus","onUpdateTodoStatus","onDoubleClick","editTodo","onClick","defaultValue","trim","onUpdateTodo","onBlur","onBlurUpdateTodo","autoFocus","length","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.678d0bec.chunk.js","sourcesContent":["export const setTodos = (todos) => {\r\n    return {\r\n        type: \"SET_TODO\",\r\n        payload: todos,\r\n    };\r\n};\r\n\r\nexport const createTodo = (todo) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: todo,\r\n    };\r\n};\r\n\r\nexport const editTodo = (index) => {\r\n    return {\r\n        type: \"EDIT_TODO\",\r\n        payload: index,\r\n    }\r\n}\r\n\r\nexport const updateTodo = (todoId, content) => {\r\n    return {\r\n        type: \"UPDATE_TODO\",\r\n        payload: {\r\n            todoId,\r\n            content,\r\n        },\r\n    };\r\n};\r\n\r\nexport const cancelEditTodo = () => {\r\n    return {\r\n        type: \"CANCEL_EDIT_TODO\",\r\n    }\r\n}\r\n\r\nexport const updateTodoStatus = (todoId, checked) => {\r\n    return {\r\n        type: \"UPDATE_TODO_STATUS\",\r\n        payload: {\r\n            todoId,\r\n            checked,\r\n        },\r\n    };\r\n};\r\n\r\nexport const deleteTodo = (todoId) => {\r\n    return {\r\n        type: \"DELETE_TODO\",\r\n        payload: todoId,\r\n    };\r\n};\r\n\r\nexport const deleteAllTodos = () => {\r\n    return {\r\n        type: \"DELETE_ALL_TODOS\",\r\n    };\r\n};\r\n\r\nexport const deleteCompletedTodos = () => {\r\n    return {\r\n        type: \"DELETE_COMPLETED_TODOS\",\r\n    };\r\n};\r\n\r\nexport const toggleAllTodos = (checked) => {\r\n    return {\r\n        type: 'TOGGLE_ALL_TODOS',\r\n        payload: checked,\r\n    };\r\n};\r\n","\r\nexport const initialState = {\r\n    todos: JSON.parse(localStorage.getItem(\"todos\")) || [],\r\n    editIndex: null,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            const newTodos = [...state.todos];\r\n            if (action.payload.content) {\r\n                newTodos.push(action.payload);\r\n                localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                todos: newTodos\r\n            };\r\n        \r\n        case 'EDIT_TODO':\r\n            return {\r\n                ...state,\r\n                editIndex: action.payload\r\n            }\r\n        \r\n        case 'UPDATE_TODO':\r\n            if (state.editIndex !== null) {\r\n                if (action.payload.content) {\r\n                    state.todos[state.editIndex].content = action.payload.content;\r\n                    localStorage.setItem(\"todos\", JSON.stringify(state.todos));\r\n                } else {\r\n                    state.todos.splice(state.editIndex, 1);\r\n                    localStorage.setItem(\"todos\", JSON.stringify(state.todos));\r\n                }\r\n                state.editIndex = null;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                todos: state.todos\r\n            }\r\n        \r\n        case 'CANCEL_EDIT_TODO':\r\n            return {\r\n                ...state,\r\n                editIndex: null\r\n            }\r\n\r\n        case 'UPDATE_TODO_STATUS':\r\n            const index1 = state.todos.findIndex((todo) => todo.id === action.payload.todoId);\r\n            state.todos[index1].status = action.payload.checked ? 'COMPLETED' : 'ACTIVE';\r\n            localStorage.setItem(\"todos\", JSON.stringify(state.todos));\r\n\r\n            return {\r\n                ...state,\r\n                todos: state.todos\r\n            }\r\n\r\n        case 'TOGGLE_ALL_TODOS':\r\n            const tempTodos = state.todos.map((e) => {\r\n                return {\r\n                    ...e,\r\n                    status: action.payload ? 'COMPLETED' : 'ACTIVE'\r\n                }\r\n            })\r\n            localStorage.setItem(\"todos\", JSON.stringify(tempTodos));\r\n\r\n            return {\r\n                ...state,\r\n                todos: tempTodos\r\n            }\r\n\r\n        case 'DELETE_TODO':\r\n            const newTodos2 = [...state.todos];\r\n            newTodos2.splice(action.payload, 1);\r\n            localStorage.setItem(\"todos\", JSON.stringify(newTodos2));\r\n\r\n            return {\r\n                ...state,\r\n                todos: newTodos2\r\n            }\r\n\r\n        case 'DELETE_COMPLETED_TODOS':\r\n            // const newTodos3 = [...state.todos];\r\n            const newTodos3 = state.todos.filter((newTodo3) => newTodo3.status === 'ACTIVE');\r\n            localStorage.setItem(\"todos\", JSON.stringify(newTodos3));\r\n\r\n            return {\r\n                ...state,\r\n                todos: newTodos3\r\n            }\r\n\r\n        case 'DELETE_ALL_TODOS':\r\n            localStorage.setItem(\"todos\", JSON.stringify([]));\r\n\r\n            return {\r\n                ...state,\r\n                todos: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React, { useReducer, useState } from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\n// deleteAllTodos,\r\nimport {\r\n  createTodo,\r\n  editTodo,\r\n  deleteTodo,\r\n  deleteCompletedTodos,\r\n  toggleAllTodos,\r\n  updateTodoStatus,\r\n  updateTodo,\r\n  cancelEditTodo,\r\n} from \"../../store/actions\";\r\nimport reducer, { initialState } from \"../../store/reducer\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nTodoPage.propTypes = {};\r\n\r\nfunction TodoPage() {\r\n  const [{ todos, editIndex }, dispatch] = useReducer(reducer, initialState);\r\n  const [showing, setShowing] = useState(\"ALL\");\r\n\r\n  const onCreateTodo = (e) => {\r\n    if (e.key === \"Enter\" && e.target.value !== \"null\") {\r\n      dispatch(\r\n        createTodo({\r\n          content: e.target.value,\r\n          created_date: new Date().toISOString(),\r\n          status: \"ACTIVE\",\r\n          id: shortid(),\r\n          user_id: \"firstUser\",\r\n        })\r\n      );\r\n      e.target.value = \"\";\r\n    }\r\n  };\r\n\r\n  const onUpdateTodo = (e, todoId) => {\r\n    if (e.key === \"Enter\") {\r\n      dispatch(updateTodo(todoId, e.target.value.trim()));\r\n      // e.target.value = \"\";\r\n    } else if (e.key === \"Escape\") {\r\n      dispatch(cancelEditTodo());\r\n    }\r\n  };\r\n\r\n  const onBlurUpdateTodo = (e, todoId) => {\r\n    dispatch(updateTodo(todoId, e.target.value.trim()));\r\n  };\r\n\r\n  //   const onDeleteTodo = (todoId) => {\r\n  //     dispatch(deleteTodo(todoId));\r\n  //   };\r\n\r\n  const onUpdateTodoStatus = (e, todoId) => {\r\n    dispatch(updateTodoStatus(todoId, e.target.checked));\r\n  };\r\n\r\n  const onToggleAllTodo = (e) => {\r\n    dispatch(toggleAllTodos(e.target.checked));\r\n  };\r\n\r\n  //   const onDeleteAllTodo = () => {\r\n  //     dispatch(deleteAllTodos());\r\n  //     };\r\n\r\n  const onClearCompletedTodo = () => {\r\n    dispatch(deleteCompletedTodos());\r\n  };\r\n\r\n  const showTodos = todos.filter((todo) => {\r\n    switch (showing) {\r\n      case \"ACTIVE\":\r\n        return todo.status === \"ACTIVE\";\r\n      case \"COMPLETED\":\r\n        return todo.status === \"COMPLETED\";\r\n      default:\r\n        return true;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>todos</h1>\r\n          <input\r\n            className=\"new-todo\"\r\n            placeholder=\"What needs to be done?\"\r\n            // autofocus=\"true\"\r\n            onKeyUp={onCreateTodo}\r\n          />\r\n        </header>\r\n        {/* <!-- This section should be hidden by default and shown when there are todos --> */}\r\n        <section className=\"main\">\r\n          <input\r\n            id=\"toggle-all\"\r\n            className=\"toggle-all\"\r\n            type=\"checkbox\"\r\n            onChange={onToggleAllTodo}\r\n            checked={\r\n              showTodos.every((todo) => todo.status === \"COMPLETED\") &&\r\n              \"checked\"\r\n            }\r\n          />\r\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n          <ul className=\"todo-list\">\r\n            {showTodos.map((todo, index) => (\r\n              <li\r\n                key={index}\r\n                className={`${todo.status === \"COMPLETED\" && \"completed\"} ${\r\n                  editIndex === index && \"editing\"\r\n                }`}\r\n              >\r\n                <div className=\"view\">\r\n                  <input\r\n                    className=\"toggle\"\r\n                    type=\"checkbox\"\r\n                    checked={todo.status === \"COMPLETED\" && \"checked\"}\r\n                    onChange={(e) => onUpdateTodoStatus(e, todo.id)}\r\n                  />\r\n                  <label onDoubleClick={() => dispatch(editTodo(index))}>\r\n                    {todo.content}\r\n                  </label>\r\n                  <button\r\n                    className=\"destroy\"\r\n                    onClick={() => dispatch(deleteTodo(index))}\r\n                  ></button>\r\n                </div>\r\n                <input\r\n                  className=\"edit\"\r\n                  defaultValue={todo.content}\r\n                  onKeyUp={(e) => onUpdateTodo(e, todo.id)}\r\n                  onBlur={(e) => onBlurUpdateTodo(e, todo.id)}\r\n                  autoFocus\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </section>\r\n        {/* <!-- This footer should hidden by default and shown when there are todos --> */}\r\n        {todos.length > 0 && (\r\n          <footer className=\"footer\">\r\n            {/* <!-- This should be `0 items left` by default --> */}\r\n            <span className=\"todo-count\">\r\n              <strong>{showTodos.length}</strong> item left\r\n            </span>\r\n            {/* <!-- Remove this if you don't implement routing --> */}\r\n            <ul className=\"filters\">\r\n              <li onClick={() => setShowing(\"ALL\")}>\r\n                <a className={`${showing === \"ALL\" && \"selected\"}`} href=\"#/\">\r\n                  All\r\n                </a>\r\n              </li>\r\n              <li onClick={() => setShowing(\"ACTIVE\")}>\r\n                <a\r\n                  className={`${showing === \"ACTIVE\" && \"selected\"}`}\r\n                  href=\"#/active\"\r\n                >\r\n                  Active\r\n                </a>\r\n              </li>\r\n              <li onClick={() => setShowing(\"COMPLETED\")}>\r\n                <a\r\n                  className={`${showing === \"COMPLETED\" && \"selected\"}`}\r\n                  href=\"#/completed\"\r\n                >\r\n                  Completed\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            {/* <!-- Hidden if no completed items are left ↓ --> */}\r\n            <button className=\"clear-completed\" onClick={onClearCompletedTodo}>\r\n              Clear completed\r\n            </button>\r\n          </footer>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoPage;\r\n","import './App.css';\n// import Footer from './components/Footer';\n// import Header from './components/Header';\n// import TodoList from './components/TodoList';\nimport TodoPage from './components/TodoPage/TodoPage';\n\n\nfunction App() {\n  return (\n    <div className=\"todoapp\">\n      {/* <Header />\n      <TodoList />\n      <Footer /> */}\n      <TodoPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}